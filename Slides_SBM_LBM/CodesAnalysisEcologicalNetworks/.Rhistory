rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
source('functionsPlots.R')
whereSave <- "/home/sophie/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/CONFERENCE_EXPOSES/EXPOSES/2023/2023_08_IBCChannel_Course/Slides_SBM_LBM/slides_SBM_LBM_intro/plots"
rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
source('functionsPlots.R')
whereSave <- "/home/sophie/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/CONFERENCE_EXPOSES/EXPOSES/2023/2023_08_IBCChannel_Course/Slides_SBM_LBM/slides_SBM_LBM_intro/plots"
###########" Trial Communities
K = 3;
nbNodes  <- 50
blockProp <- c(.25, 0.5 ,.25) # group proportions
means <- diag(.4, 3) + 0.05  # connectivity matrix: affiliation network
connectParam <- list(mean = means)
mySampler <- sampleSimpleSBM(nbNodes, blockProp, directed = TRUE, connectParam,dimLabels = 'Species', model = 'bernoulli')
myPlot <- myPlotForPaper(mySampler,myTitle='')
myPlot
ggnet2(mySampler$networkData)
ggnet2(mySampler$networkData,label = TRUE)
ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1])
colSet2 <- brewer.pal(n = 8, name = "Set2")
ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1])
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1])
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm")
whereSave <- "/home/sophie/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/CONFERENCE_EXPOSES/EXPOSES/2023/2023_08_IBCChannel_Course/Slides_SBM_LBM/slides_SBM_LBM_intro/plots"
###########" Trial Communities
K = 3;
nbNodes  <- 50
blockProp <- c(.25, 0.5 ,.25) # group proportions
means <- diag(.4, 3) + 0.05  # connectivity matrix: affiliation network
connectParam <- list(mean = means)
mySampler <- sampleSimpleSBM(nbNodes, blockProp, directed = TRUE, connectParam,dimLabels = 'Species', model = 'bernoulli')
colSet2 <- brewer.pal(n = 8, name = "Set2")
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1])
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm")
whereSave <- "/home/sophie/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/CONFERENCE_EXPOSES/EXPOSES/2023/2023_08_IBCChannel_Course/Slides_SBM_LBM/slides_SBM_LBM_intro/plots/"
###########" Trial Communities
K = 3;
nbNodes  <- 50
blockProp <- c(.25, 0.5 ,.25) # group proportions
means <- diag(.4, 3) + 0.05  # connectivity matrix: affiliation network
connectParam <- list(mean = means)
mySampler <- sampleSimpleSBM(nbNodes, blockProp, directed = TRUE, connectParam,dimLabels = 'Species', model = 'bernoulli')
colSet2 <- brewer.pal(n = 8, name = "Set2")
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1])
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm")
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
mythemeTransp <- theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent') #transparent legend panel
)
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10cm) +
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
K = 4;
nbNodes  <- 50
blockProp <- c(0.2, .25, 0.30 ,.25) # group proportions
alpha <- matrix(0.02,K,K)
alpha[2,1] = 0.5
alpha[3,1] = 0.5
alpha[3:4,2] = 0.4
alpha[3:4,3] = 0.4
diag(alpha) = 0.1
connectParam <- list(mean = alpha)
mySampler <- sampleSimpleSBM(nbNodes, blockProp, directed = TRUE, connectParam,dimLabels = 'Species', model = 'bernoulli')
myPlot <- myPlotForPaper(mySampler,myTitle = NULL)
myPlot
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuFoodWeb.png"),  height = 10 , units = "cm")
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuFoodWeb.png"), height = 20 , units = "cm")
mythemeTransp <- theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent') #transparent legend panel
)
rowNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rowNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
rowNet
PlotMatrix  <- plotMyMatrix(mySampler$networkData,dimLabels = list(row = "species", col = "species"),plotOptions=list(colNames = TRUE, rowNames = TRUE))+ mythemeTransp
PlotMatrix <- PlotMatrix + theme(axis.text.x = element_text(color=my_color_nodes),axis.text.y = element_text(color=my_color_nodes))
PlotMatrix
colSet2 <- brewer.pal(n = 8, name = "Set2")
rawNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rawNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
PlotMatrixRaw  <- plotMyMatrix(mySampler$networkData,dimLabels = list(row = "species", col = "species"),plotOptions=list(colNames = TRUE, rowNames = TRUE))+ mythemeTransp
ggsave(PlotMatrixRaw, file = paste0(whereSave,"matrix_raw.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='')
myPlot
ggsave(PlotMatrixRaw, file = paste0(whereSave,"matrix_raw.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='')
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm")
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuCommunities.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='') + theme(legend.position = "none")
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm",width = 10)
myPlot <- myPlotForPaper(mySampler,myTitle='') + theme(legend.position = "none")
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm",width = 10)
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuCommunities.png"), height = 20 , units = "cm")
colSet2 <- brewer.pal(n = 8, name = "Set2")
rawNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rawNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
PlotMatrixRaw  <- plotMyMatrix(mySampler$networkData,dimLabels = list(row = "species", col = "species"),plotOptions=list(colNames = TRUE, rowNames = TRUE))+ mythemeTransp
ggsave(PlotMatrixRaw, file = paste0(whereSave,"matrix_raw.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='') + theme(legend.position = "none")
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm",width = 10)
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuCommunities.png"), height = 20 , units = "cm")
rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
source('functionsPlots.R')
whereSave <- "/home/sophie/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/CONFERENCE_EXPOSES/EXPOSES/2023/2023_08_IBCChannel_Course/Slides_SBM_LBM/slides_SBM_LBM_intro/plots/"
###################################################"
###########" Trial Communities
#####################################################
K = 3;
nbNodes  <- 50
blockProp <- c(.25, 0.5 ,.25) # group proportions
means <- diag(.4, 3) + 0.05  # connectivity matrix: affiliation network
connectParam <- list(mean = means)
mySampler <- sampleSimpleSBM(nbNodes, blockProp, directed = TRUE, connectParam,dimLabels = 'Species', model = 'bernoulli')
mythemeTransp <- theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent') #transparent legend panel
)
#--------------------------- raw data
colSet2 <- brewer.pal(n = 8, name = "Set2")
rawNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rawNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
PlotMatrixRaw  <- plotMyMatrix(mySampler$networkData,dimLabels = list(row = "species", col = "species"),plotOptions=list(colNames = TRUE, rowNames = TRUE))+ mythemeTransp
ggsave(PlotMatrixRaw, file = paste0(whereSave,"matrix_raw.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='') + theme(legend.position = "none")
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm",width = 10)
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuCommunities.png"), height = 20 , units = "cm")
#--------------------------- raw data
colSet2 <- brewer.pal(n = 8, name = "Set2")
rawNet <- ggnet2(mySampler$networkData,label = TRUE,color=colSet2[1]) + mythemeTransp
ggsave(rawNet, file = paste0(whereSave,"network_raw.png"), height = 10 , units = "cm",width = 10)
PlotMatrixRaw  <- plotMyMatrix(mySampler$networkData,dimLabels = list(row = "species", col = "species"),plotOptions=list(colNames = TRUE, rowNames = TRUE))+ mythemeTransp
ggsave(PlotMatrixRaw, file = paste0(whereSave,"matrix_raw.png"), height = 20 , units = "cm")
myPlot <- myPlotForPaper(mySampler,myTitle='')
ggsave(myPlot[[2]], file = paste0(whereSave,"network_SimuCommunities.png"), height = 10 , units = "cm",width = 10)
ggsave(myPlot[[1]], file = paste0(whereSave,"matrix_SimuCommunities.png"), height = 20 , units = "cm")
rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
pathtodata <- paste0(getwd(),'/data')
my_files <- list.files(pathtodata)
food_webs <- lapply(
X = seq_along(my_files),
FUN = function(i) {
df <- read.csv(file = paste0(pathtodata,"/",my_files[i]), header = TRUE, row.names = 1)
A <- as.matrix(df)
return(list(
net = A,
nr = nrow(A),
nc = ncol(A),
dens = mean(A),
id = stringr::str_sub(my_files[i], 1, -5))
)
}
)
site_names <- c("Martins (M)", "Cooper (NC)", "Herlzier (NC)", "Venlaw (NC)",
"Berwick (NZ)", "North Col. (NZ)", "Powder (NZ)", "Trib. C (NZ)" )
names(food_webs)<- site_names
food_webs
site_names <- c("Martins_M", "Cooper_NC", "Herlzier_NC", "Venlaw_NC",
"Berwick_NZ", "NorthCol_NZ", "Powder_NZ", "TribC_NZ" )
names(food_webs)<- site_names
PlotMatrix = list()
PlotNet = list()
PlotDeg = list()
mythemeTransp <- theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent') #transparent legend panel
)
i = 1
rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
pathtodata <- paste0(getwd(),'/data')
my_files <- list.files(pathtodata)
food_webs <- lapply(
X = seq_along(my_files),
FUN = function(i) {
df <- read.csv(file = paste0(pathtodata,"/",my_files[i]), header = TRUE, row.names = 1)
A <- as.matrix(df)
return(list(
net = A,
nr = nrow(A),
nc = ncol(A),
dens = mean(A),
id = stringr::str_sub(my_files[i], 1, -5))
)
}
)
site_names <- c("Martins_M", "Cooper_NC", "Herlzier_NC", "Venlaw_NC",
"Berwick_NZ", "NorthCol_NZ", "Powder_NZ", "TribC_NZ" )
names(food_webs)<- site_names
PlotMatrix = list()
PlotNet = list()
PlotDeg = list()
mythemeTransp <- theme(
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
legend.background = element_rect(fill='transparent'), #transparent legend bg
legend.box.background = element_rect(fill='transparent') #transparent legend panel
)
net
Li <- food_webs[[i]]
Mat <- Li$net
nr <- Li$nr
U <- order(rownames(Mat))
Mat <- Mat[U,U]
net = network(Mat, directed = TRUE)
i ) 1
Li <- food_webs[[i]]
Mat <- Li$net
rm(list=ls())
library(sbm)
library(GGally)
library(network)
library(RColorBrewer)
library(ggpubr)
pathtodata <- paste0(getwd(),'/data')
my_files <- list.files(pathtodata)
food_webs <- lapply(
X = seq_along(my_files),
FUN = function(i) {
df <- read.csv(file = paste0(pathtodata,"/",my_files[i]), header = TRUE, row.names = 1)
A <- as.matrix(df)
return(list(
net = A,
nr = nrow(A),
nc = ncol(A),
dens = mean(A),
id = stringr::str_sub(my_files[i], 1, -5))
)
}
)
site_names <- c("Martins_M", "Cooper_NC", "Herlzier_NC", "Venlaw_NC",
"Berwick_NZ", "NorthCol_NZ", "Powder_NZ", "TribC_NZ" )
names(food_webs)<- site_names
Li <- food_webs[[i]]
i = 1
Li <- food_webs[[i]]
estimateSimpleSBM(Li)
Mat
Li <- food_webs[[i]]
Li
Li$net
Mat <- Li$net
nr <- Li$nr
U <- order(rownames(Mat))
Mat <- Mat[U,U]
Mat
estimateSimpleSBM(Mat)
