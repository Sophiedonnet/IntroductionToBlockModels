setwd("~/WORK/RECHERCHE/FORMATIONS_CHERCHEURS/FORMATIONS_RESEAUX/IntroductionToBlockModels/TP_SBM/pgm")
setwd("~/WORK/RECHERCHE/FORMATIONS_CHERCHEURS/FORMATIONS_RESEAUX/IntroductionToBlockModels/TP_SBM/pgm")
library(sbm)
library(ggplot2)
library(knitr)
data("fungusTreeNetwork")
str(fungusTreeNetwork,  max.level = 1)
tree_tree_binary <- 1 * (fungusTreeNetwork$tree_tree != 0)
mySimpleSBM <- tree_tree_binary %>%
estimateSimpleSBM("bernoulli", dimLabels = list(row = 'tree', col = 'tree'), estimOptions = list(verbosity = 0, plot=FALSE))
mySimpleSBMPoisson <- tree_tree %>%
estimateSimpleSBM("poisson", estimOptions = list(verbosity = 0),dimLabels = c('tree','tree'))
tree_tree <- fungusTreeNetwork$tree_tree
mySimpleSBMPoisson <- tree_tree %>%
estimateSimpleSBM("poisson", estimOptions = list(verbosity = 0),dimLabels = c('tree','tree'))
mySimpleSBMCov<- estimateSimpleSBM(netMat = as.matrix(tree_tree),model = 'poisson',directed =FALSE,dimLabels =list(row='tree',col='tree'), covariates  = fungusTreeNetwork$covar_tree,estimOptions = list(verbosity = 0))
myBipartiteSBM <- estimateBipartiteSBM(netMat = as.matrix(fungusTreeNetwork$fungus_tree),model = 'bernoulli',dimLabels=list(row = 'fungis',col = 'tree'),estimOptions = list(verbosity = 0))
save(myBipartiteSBM, mySimpleSBM, mySimpleSBMPoisson, mySimpleSBMCov, file = 'allResultsTreeFungus.rda')
getwd()
setwd("~/WORK/RECHERCHE/FORMATIONS_CHERCHEURS/FORMATIONS_RESEAUX/IntroductionToBlockModels/TP_SBM/pgm")
mySimpleSBMCov<- estimateSimpleSBM(netMat = as.matrix(tree_tree),model = 'poisson',directed =FALSE,dimLabels =list(row='tree',col='tree'), covariates  = fungusTreeNetwork$covar_tree,estimOptions = list(verbosity = 0))
mySimpleSBMCov<- estimateSimpleSBM(netMat = as.matrix(tree_tree),model = 'poisson',directed =FALSE,dimLabels =list(row='tree',col='tree'), covariates  = fungusTreeNetwork$covar_tree,estimOptions = list(verbosity = 0,plot = TRUE))
plot(myBipartiteSBM, type = "meso")
plot(myBipartiteSBM, type = "meso",plotOptions = list(nodes.size=0.3))
plot(myBipartiteSBM, type = "meso",plotOptions = list(node.size=0.3))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=0.3))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(0.3,5))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,5))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,5)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,2)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,1)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.6)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1)
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1)))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1)))
lotOptions = list(vertex.size=c(2,0.4), edge.width  = 1)
plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1)
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 1.5))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 4))
help("plot.SBM")
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 4,vertex.label.dist = 2))
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 4,vertex.label.dist = c(2,2))
)
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 4)
)
plot(myBipartiteSBM, type = "meso",plotOptions = list(vertex.size=c(2,0.4), edge.width  = 4))
